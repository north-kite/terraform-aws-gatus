---
name: Terraform
on:
  pull_request:
    types:
      - opened
      - reopened
      - edited
      - synchronize
jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.6

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -diff
        continue-on-error: true

      - uses: actions/github-script@v3
        if: ${{ failure() }}
        env:
          RESULT: "terraform\n${{ steps.fmt.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style ðŸ–Œ\`${{ steps.fmt.outcome }}\`
            <details><summary>Show Result</summary>

            \`\`\`${ process.env.RESULT }\`\`\`
            </details>
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  kics-scan:
    name: KICS Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: 'repo'
      - name: KICS Github Action
        uses: checkmarx/kics-action@v1.7.0
        with:
          path: 'repo'
          exclude_paths: 'repo/examples'
          output_path: 'results'
          platform_type: terraform
          fail_on: high,medium
          enable_comments: true
          enable_annotations: true
      - name: Display KICS Results
        run: |
          cat results/results.json
